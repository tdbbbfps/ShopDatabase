from pydantic import BaseModel, Field
from typing import Optional

# Item model
class Item(BaseModel):
    id: Optional[int] = Field(
        default=None, 
        primary_key=True,
        description="The unique identifier of the item, auto-generated by the database."
    )
    name: str = Field(
        ..., # '...' 表示此欄位為必填，沒有預設值
        min_length=1, 
        max_length=100, 
        description="The name of the item."
    ) # gt大於, ge大於等於, lt小於, le小於等於(ge=0表示價格必須大於等於0)
    price: int = Field(..., ge=0, description="The price of the item. Must be non-negative.")

# Item model for creating a new item
class ItemCreate(BaseModel):
    name : str = Field(
        ...,
        min_length=1,
        max_length=100,
        description="The name of the item."
    )
    price : int = Field(
        ...,
        ge=0,
        description="The price of the item. Must be non-negative."
    )
# Item model for removing an item by id
class ItemRemove(BaseModel):
    id : int = Field(
        ...,
        description="The unique identifier of the item to be removed."
    )

class ItemUpdate(BaseModel):
    id : int = Field(
        ...,
        description="The unique identifier of the item to be updated."
    )
    name : Optional[str] = Field(
        None,
        min_length=1,
        max_length=100,
        description="The new name of the item."
    )
    price : Optional[int] = Field(
        None,
        ge=0,
        description="The new price of the item. Must be non-negative."
    )