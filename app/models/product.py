from pydantic import BaseModel, Field
from typing import Optional

# Product model
class Product(BaseModel):
    product_id: Optional[int] = Field(
        default=None, 
        primary_key=True,
        description="The unique identifier of the product, auto-generated by the database."
    )
    name: str = Field(
        ..., # '...' 表示此欄位為必填，沒有預設值
        min_length=1, 
        max_length=100, 
        description="The name of the product."
    ) # gt大於, ge大於等於, lt小於, le小於等於(ge=0表示價格必須大於等於0)
    price: int = Field(..., ge=0, description="The price of the product. Must be non-negative.")
    quantity : int = Field(
        ...,
        ge=0,
        description="The quantity of the product. Must be non-negative."
    )
# Product model for creating a new product.
class ProductCreate(BaseModel):
    name : str = Field(
        ...,
        min_length=1,
        max_length=100,
        description="The name of the product."
    )
    price : int = Field(
        ...,
        ge=0,
        description="The price of the product. Must be non-negative."
    )
    quantity : int = Field(
        ...,
        ge=0,
        description="The quantity of the product. Must be non-negative."
    )
# Product model for removing an product by id
class ProductRemove(BaseModel):
    product_id : int = Field(
        ...,
        description="The unique identifier of the product to be removed."
    )
# Product model for updating product name, price, quantity
class ProductUpdate(BaseModel):
    product_id : int = Field(
        ...,
        description="The unique identifier of the product to be updated."
    )
    name : Optional[str] = Field(
        None,
        min_length=1,
        max_length=100,
        description="Change the product name if not null."
    )
    price: Optional[int] = Field(
        None, 
        ge=0, 
        description="Change the product price if not null. Must be non-negative."
    )

# Product model for updating product quantity atomically
class ProductQuantityUpdate(BaseModel):
    iproduct_id :int = Field(
        ...,
        description="The unique identifier of the product to be updated."
    )
    change: int = Field(
        ...,
        description="The amount to change the quantity by. Use a negative number to decrease, a positive number to increase."
    )